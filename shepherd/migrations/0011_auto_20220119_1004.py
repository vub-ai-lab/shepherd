# Generated by Django 3.2.4 on 2022-01-19 10:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('shepherd', '0010_apikey'),
    ]

    operations = [
        migrations.AddField(
            model_name='agent',
            name='creation_time',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, verbose_name='Date-time of the creation of the agent'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='agent',
            name='algo',
            field=models.ForeignKey(help_text='Reinforcement Learning algorithm that the agent is running (for instance, PPO, SAC, BDPI, etc).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='shepherd.algorithm', verbose_name='RL algorithm executed by this agent'),
        ),
        migrations.AlterField(
            model_name='agent',
            name='owner',
            field=models.ForeignKey(help_text='The owner of an agent is the user/client of Shepherd.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user that owns this agent'),
        ),
        migrations.AlterField(
            model_name='agent',
            name='policy',
            field=models.CharField(choices=[('MlpPolicy', 'MlpPolicy: states that are lists of floats'), ('CnnPolicy', 'CnnPolicy: states that are images or 2D arrays')], help_text='The Policy class used depends on the shape of the observations passed to the agent. CnnPolicy is used when the observations of the environment are raw images. Otherwise, MlpPolicy is preferable.', max_length=32, verbose_name='Policy class'),
        ),
        migrations.AlterField(
            model_name='algorithm',
            name='can_continuous_actions',
            field=models.BooleanField(help_text='Not all RL algorithms are compatible with continuous actions (a continuous action is a real number); this field indiscates if this specific RL algorithm can handle continuous actions, True or False. In contrast, we consider that all RL algorithms available via Shepherd are compatible with discrete actions by default.', verbose_name='Compatible with continuous actions'),
        ),
        migrations.AlterField(
            model_name='algorithm',
            name='name',
            field=models.CharField(help_text='Name of the Reinforcement Learning algorithm (for instance, Proximal Policy Optimization (PPO)).', max_length=32, verbose_name="algorithm's name"),
        ),
        migrations.AlterField(
            model_name='apikey',
            name='key',
            field=models.CharField(default='56d73ed5-5492-4fa5-abee-dc044f5d1028', max_length=36, unique=True, verbose_name='API Key string'),
        ),
    ]
